{"version":3,"sources":["webpack:///./node_modules/date-fns/esm/toDate/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/index.js","webpack:///./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack:///./node_modules/date-fns/esm/subMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/addMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack:///./node_modules/date-fns/esm/format/index.js","webpack:///./node_modules/date-fns/esm/isValid/index.js","webpack:///./src/templates/article.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.number.constructor.js","webpack:///./src/components/articles/list.js","webpack:///./src/components/articles/index.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.array.find-index.js"],"names":["toDate","argument","arguments","length","TypeError","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","dirtyOptions","options","width","String","defaultWidth","formats","date","full","medium","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","ordinalNumber","dirtyNumber","_dirtyOptions","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","value","matchedString","parsePatterns","defaultParseWidth","findIndex","pattern","test","object","predicate","key","hasOwnProperty","findKey","valueCallback","rest","slice","formatDistance","token","count","result","replace","addSuffix","comparison","formatLong","formatRelative","_date","_baseDate","_options","localize","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","toInteger","isNaN","Math","ceil","floor","subMilliseconds","dirtyDate","dirtyAmount","timestamp","amount","addMilliseconds","addLeadingZeros","targetLength","sign","output","abs","y","signedYear","getUTCFullYear","year","M","getUTCMonth","d","getUTCDate","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","MILLISECONDS_IN_DAY","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","setUTCHours","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","MILLISECONDS_IN_WEEK","getUTCISOWeek","fourthOfJanuary","startOfUTCISOWeekYear","round","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","getUTCWeek","firstWeek","startOfUTCWeekYear","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","G","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","setUTCMonth","difference","getUTCDayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","b","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","x","O","z","t","originalDate","T","dateLongFormatter","timeLongFormatter","p","P","dateTimeFormat","datePattern","timePattern","MILLISECONDS_IN_MINUTE","protectedDayOfYearTokens","protectedWeekYearTokens","throwProtectedError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","dirtyFormatStr","formatStr","isValid","utcDate","baseTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset","getTimezoneOffsetInMilliseconds","formatterOptions","map","substring","firstCharacter","longFormatter","join","formatter","useAdditionalWeekYearTokens","indexOf","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","Template","data","pageContext","markdownRemark","frontmatter","html","_relatedArticles","relatedArticles","filter","title","hasRelatedArticles","Array","isArray","articleClasses","classNames","className","featuredImage","src","publicURL","alt","subtitle","dangerouslySetInnerHTML","__html","list","subTitle","query","global","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","trim","$Number","Base","proto","BROKEN_COF","TRIM","toNumber","it","third","radix","maxCode","first","charCodeAt","code","digits","l","that","this","valueOf","keys","split","j","constructor","List","render","props","path","to","words","ellipsis","document","createElement","innerHTML","contentParts","textContent","truncateHTML","PureComponent","defaultProps","$export","$find","KEY","forced","F","callbackfn","undefined"],"mappings":"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","file":"component---src-templates-article-js-d9d4265936c2dea1a7f8.js","sourcesContent":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import \"core-js/modules/es6.regexp.replace\";\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  \"long\": 'MMMM do, y',\n  medium: 'MMM d, y',\n  \"short\": 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  \"long\": 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  \"short\": 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  \"long\": \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  \"short\": '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","import \"core-js/modules/es6.number.constructor\";\nimport buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  \"short\": ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.regexp.match\";\nexport default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = parsePatterns.findIndex(function (pattern) {\n        return pattern.test(string);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  \"short\": /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import \"core-js/modules/es6.regexp.match\";\nexport default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import \"core-js/modules/es6.number.constructor\";\nexport default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\n\nfunction dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = date.getTimezoneOffset();\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import \"core-js/modules/es6.array.index-of\";\nvar protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.array.map\";\nimport isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'(.*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `true`        |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import classNames from 'classnames';\nimport format from 'date-fns/format';\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport { ArticleList } from 'components/articles';\n\nimport './article.scss';\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n  pageContext,\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark;\n  const { relatedArticles } = pageContext\n\n  const _relatedArticles = relatedArticles.filter(({title}) => title !== frontmatter.title )\n  const hasRelatedArticles = Array.isArray(_relatedArticles) && _relatedArticles.length > 0;\n\n  const articleClasses = classNames('up-articles__article', {\n    'up-articles__article--no-related': !hasRelatedArticles,\n  })\n  return (\n    <div className=\"up-articles\">\n      <div className=\"up-articles__inner\">\n        <article className={articleClasses}>\n            <div className=\"up-articles__header\">\n              <h1 className=\"up-articles__title\">\n                {frontmatter.title}\n              </h1>\n              <div className=\"up-articles__date\">\n                {format(new Date(frontmatter.date), 'MMMM yyyy')}\n              </div>\n            </div>\n            {frontmatter.featuredImage && (\n              <div className=\"up-articles__image\">\n                <img src={frontmatter.featuredImage.publicURL} alt=\"\"/>\n              </div>\n            )}\n            {frontmatter.subtitle && (\n              <h2 className=\"up-articles__subtitle\">\n                {frontmatter.subtitle}\n              </h2>\n            )}\n            <div\n              className=\"up-articles__content\"\n              dangerouslySetInnerHTML={{ __html: html }}\n            />\n        </article>\n        {hasRelatedArticles && (\n          <ArticleList\n            list={_relatedArticles}\n            subTitle=\"Related Articles\"\n            title=\"See other similar articles\"\n          />\n        )}\n      </div>\n    </div>\n  )\n}\nexport const query = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        subtitle\n        featuredImage {\n            publicURL\n        }\n      }\n    }\n  }\n`\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Link } from 'gatsby';\n\nimport './list.scss';\n\nconst truncateHTML = ({html, words = 50, ellipsis = '...'}) => {\n  if (typeof document === 'undefined') {\n    return html;\n  }\n  const d = document.createElement( 'div' );\n  d.innerHTML = html;\n  const contentParts = d.textContent.split(' ');\n\n  return contentParts < words\n    ? contentParts.join(' ')\n    : contentParts.slice(0, words).join(' ') + ellipsis;\n}\n\nclass List extends PureComponent {\n\n  static propTypes = {\n    list: PropTypes.arrayOf(PropTypes.shape({\n      html: PropTypes.string,\n      path: PropTypes.string,\n      tag: PropTypes.string,\n      title: PropTypes.string,\n    })),\n    subTitle: PropTypes.string,\n    tag: PropTypes.string,\n    title: PropTypes.string,\n  };\n\n  static defaultProps = {\n    list: [],\n  };\n\n  render() {\n\n    const {\n      list,\n      subTitle,\n      title\n    } = this.props;\n\n    return (\n      <section className=\"up-article-list\">\n        <div className=\"up-article-list__inner\">\n          <h2 className=\"up-article-list__title\">\n            {subTitle && <span>{subTitle}</span>}\n            {title}\n          </h2>\n\n          <div className=\"up-article-list__list\">\n            {list.map(({html, featuredImage, path, title}) => (\n              <article key={title} className=\"up-article-list__item\">\n                <Link to={path} className=\"up-article-list__article-title\">\n                  {title}\n                </Link>\n                {featuredImage && (\n                  <Link to={path} className=\"up-article-list__image\">\n                    <img src={featuredImage.publicURL} alt=\"\"/>\n                  </Link>\n                )}\n                  <div className=\"up-article-list__copy\">\n                    {truncateHTML({html})}\n                  </div>\n                  <Link className=\"up-article-list__cta\" to={path}>Read more</Link>\n              </article>\n            ))}\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default List;\n","export { default as ArticleList } from './list';\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n"],"sourceRoot":""}